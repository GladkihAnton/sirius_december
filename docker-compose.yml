version: '3.9'

services:
  web:
    container_name: web
    build:
      dockerfile: docker/Dockerfile
      context: .
    ports:
      - "8000:8000"
    command: scripts/web/startup.sh -m -l
    restart: on-failure
    env_file:
      - ./conf/.env
    volumes:
      - .:/code
    depends_on:
      web_db:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - sirius_network

  web_db:
    container_name: web_db
    image: library/postgres:13.2
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=main_db
    restart: on-failure
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "main_db" ]
      interval: 5s
      retries: 5
    volumes:
      - ./scripts/postgres:/docker-entrypoint-initdb.d
    networks:
      - sirius_network

  redis:
    container_name: redis
    image: redis:6.2.4
    ports:
      - "6379:6379"
    networks:
      - sirius_network

  kafka:
    image: docker.redpanda.com/vectorized/redpanda:v22.2.2
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --node-id 0
      - --kafka-addr PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://kafka:29092,OUTSIDE://localhost:9092
      - --pandaproxy-addr 0.0.0.0:8082
      - --advertise-pandaproxy-addr localhost:8082
    healthcheck:
      test: [ "CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1" ]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s
    ports:
      - "29092:29092"
    networks:
      - sirius_network

  console:
    image: docker.redpanda.com/vectorized/console:latest
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka:29092"]
          schemaRegistry:
            enabled: true
            urls: ["http://kafka:8081"]
          messagePack:
            enabled: true
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://kafka:9644"]
    ports:
      - "8080:8080"
    networks:
      - sirius_network
    depends_on:
      - kafka

networks:
  sirius_network:
    driver: bridge
